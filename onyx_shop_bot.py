import os
import threading
from dotenv import load_dotenv
from telegram import (InlineKeyboardButton, InlineKeyboardMarkup, Update)
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
from flask import Flask
import logging

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
TARGET_CHANNEL_ID = int(os.getenv("TARGET_CHANNEL_ID"))
MODERATION_CHAT_ID = int(os.getenv("MODERATION_CHAT_ID"))
REJECTED_CHAT_ID = int(os.getenv("REJECTED_CHAT_ID"))

# Flask –¥–ª—è —Ñ–µ–π–∫–æ–≤–æ–≥–æ –ø–∏–Ω–≥–∞
app = Flask(__name__)

@app.route('/')
def index():
    return "Bot is running."

def run_flask():
    app.run(host='0.0.0.0', port=8080)

# –í–∫–ª—é—á–∞–µ–º logging –¥–ª—è –æ—à–∏–±–æ–∫
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)
logger = logging.getLogger(__name__)

# –í–∫–ª—é—á–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π Flask –¥–ª—è –ø–∏–Ω–≥–∞
flask_thread = threading.Thread(target=run_flask)
flask_thread.start()

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤ (–º–∞—Ç, –∂–∞—Ä–≥–æ–Ω–∏–∑–º—ã, –Ω–µ–ø—Ä–∏—Å—Ç–æ–π–Ω–æ—Å—Ç–∏, –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ)
FORBIDDEN_WORDS = [
    "—Ä–µ–∫–ª–∞–º–∞", "–ø–æ–¥–ø–∏—à–∏—Å—å", "–ø–æ–¥–ø–∏—Å–∫–∞", "—Ä–µ—Ñ–µ—Ä–∞–ª", "—Å—Å—ã–ª–∫–∞", "instagram", "youtube", "tiktok", 
    "http", "www", ".com", ".ru", "—Å–ø–∞–º", "–ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è", "–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏", "–≤–∞–≥–∏–Ω–∞", "–∞–Ω–∞–ª—å–Ω—ã–π", 
    "—Å—É–∏—Ü–∏–¥", "—É–±–∏–π—Å—Ç–≤–æ", "—ç–∫—Å—Ç—Ä–µ–º–∏–∑–º", "–±–µ—Å–ø–ª–∞—Ç–Ω–æ", "–∫—Ä–µ–¥–∏—Ç", "–ª–æ—Ö–æ—Ç—Ä–æ–Ω", "–æ–±–º–∞–Ω", "–∂–µ—Ä—Ç–≤–∞", 
    "–º–∞—Ñ–∏—è", "–º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ", "–ø–∏–¥–æ—Ä", "–≥–µ–π", "–ª–µ—Å–±–∏—è–Ω–∫–∞", "–ø–æ—Ä–Ω", "–≤–∏–¥–µ–æ—á–∞—Ç", "—Å–µ–∫—Å—É–∞–ª—å–Ω—ã–µ", 
    "—Å–µ–∫—Å", "–∞–Ω–æ–Ω–∏–º", "–º–∞—Å—Å–∞–∂–∏—Å—Ç", "–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞", "–Ω–∞–∫—Ä—É—Ç–∫–∞", "–¥–µ–ø–æ–∑–∏—Ç", "–ø—Ä–∏–≤–ª–µ—á—å", "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ",
    "–≤–æ–¥–∫–∞", "—Ç–∞–±–∞–∫", "–ø–∏–≤–æ", "–Ω–∞—Ä–∫–æ—Ç–∞", "–ø—É—Ç–∞–Ω–∞", "–ø—Ä–æ—Å—Ç–∏—Ç—É—Ü–∏—è", "–¥–µ–Ω—å–≥–∏ –≤ –¥–æ–ª–≥", "–∫—Ä–µ–¥–∏—Ç–∫–∏",
    "–º–∏–∫—Ä–æ–∑–∞–π–º—ã", "–ø—Å–µ–≤–¥–æ–Ω–∞—É–∫–∞", "–≤–ª–∏—è–Ω–∏–µ", "–∞—Ñ–µ—Ä–∞", "–∏–≥—Ä—ã –Ω–∞ –¥–µ–Ω—å–≥–∏", "—Å—Ç—Ä–∏–ø—Ç–∏–∑", "—Ç–∞–Ω—Ü—ã –Ω–∞ –ø–∏–ª–æ–Ω–µ", 
    "–∏–≥—Ä—ã –∫–∞–∑–∏–Ω–æ", "–∏–≥—Ä–æ–≤—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã", "–ª–æ—Ç–æ", "–ª–æ—Ç–µ—Ä–µ–∏", "–º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è", "—Ä–µ–∫–ª–∞–º–∞ –±–∏–∑–Ω–µ—Å–∞", 
    "–º–∞—Ö–∏–Ω–∞—Ü–∏–∏", "–≥—Ä—É–∑–æ–≤–∏–∫–∏", "–æ—Ä—É–∂–∏–µ", "–±–æ–µ–ø—Ä–∏–ø–∞—Å—ã", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ç–æ—Ä–≥–æ–≤–ª—è –æ—Ä—É–∂–∏–µ–º", "–ø–∏—Å—Ç–æ–ª–µ—Ç", "–ø–Ω–µ–≤–º–∞—Ç–∏–∫–∞",
    "–æ–≥–Ω–µ—Å—Ç—Ä–µ–ª—å–Ω–æ–µ", "–æ—Ä—É–∂–∏–µ", "–∫–∞—Å—Ç–µ—Ç—ã", "–ø–æ—Ä–Ω–æ–±–∏–∑–Ω–µ—Å", "–∞–Ω—Ç–∏–±–∏–æ—Ç–∏–∫–∏", "—Å—Ç–∏–º—É–ª—è—Ç–æ—Ä—ã", "–ø—Å–∏—Ö–æ—Ç—Ä–æ–ø—ã",
    "–ø—Å–∏—Ö–æ–¥–µ–ª–∏–∫–∏", "–º–∞—Ä–æ–¥–µ—Ä—Å—Ç–≤–æ", "–Ω–∞—Ü–∏–∑–º", "—Ñ–∞—à–∏–∑–º", "—Ç–µ—Ä—Ä–æ—Ä–∏–∑–º", "—Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–µ", "–¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ü–∏—è",
    "–µ–±–∞—Ç—å", "–ø–∏–∑–¥–∞", "—Ö—É–π", "—Å—É–∫–∞", "–±–ª—è–¥—å", "–º—É–¥–∞–∫", "–ø–∏–¥–æ—Ä–∞—Å", "–∑–∞–µ–±–∞–ª", "–Ω–∞—Ö—É–π", "–∂–æ–ø–∞", "–µ–±–∞–Ω—ã–π",
    "–±–ª—É–¥", "–µ–±–ª–æ", "–ø–∏–¥–∞—Ä–∞—Å", "—Å–æ—Å–∏", "–≥–∞–Ω–¥–æ–Ω", "—É—Ä–æ–¥", "–ø—Å–∏—Ö", "–ø–∏–∑–¥–∏—Ç—å", "–Ω–∞—Ö–µ—Ä–∞", "–ø–æ–≥–æ–¥–∏", "—á–µ—Ä—Ç–∏",
    "—Å—É—á–∫–∞", "–º—Ä–∞–∑—å", "—Å–≤–æ–ª–æ—á—å", "–≥–æ–Ω–¥–æ–Ω", "–ø–∏—Ç–æ–Ω", "—Å—É—á–∏–π", "–ø–µ—Ç—É—Ö", "—Ç—É–ø–∞—è", "–µ–±–∞–Ω—ã–π", "–≤—ã–µ–±–∞—Ç—å—Å—è"
]

# –°–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
ALLOWED_KEYWORDS = ["–ø–æ–∫—É–ø–∫–∞", "–ø—Ä–æ–¥–∞–∂–∞", "–æ–±–º–µ–Ω", "sell", "–ø—Ä–æ–¥–∞—é", "–∫—É–ø–ª—é", "trade", "buy", "b"]

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
pending_approvals = {}

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
def build_caption(text: str, username: str, price: str = None):
    user_mention = f"@{username}" if username else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä—ã–ª –∏–º—è"
    price_line = f"\n–¶–µ–Ω–∞: {price}" if price else ""
    caption = f"""
–û–±—ä—è–≤–ª–µ–Ω–∏–µ
-------------------
{text.strip()}

-------------------
–û—Ç–ø—Ä–∞–≤–∏–ª(–∞): {user_mention}
"""
    return caption[:1024]  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ —Å–∏–º–≤–æ–ª–∞–º Telegram

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–ª–æ–≤
def contains_forbidden_words(text: str):
    return any(word in text.lower() for word in FORBIDDEN_WORDS)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
def contains_allowed_keywords(text: str):
    return any(kw in text.lower() for kw in ALLOWED_KEYWORDS)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –æ –ø—Ä–æ–¥–∞–∂–µ, –ø–æ–∫—É–ø–∫–µ –∏ –æ–±–º–µ–Ω–µ –≤ @onyx_sh0p.\n"
        "–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –±–æ—Ç—É."
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message and update.message.text:
        text = update.message.text
        username = update.message.from_user.username or "–∞–Ω–æ–Ω–∏–º"
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω—ã, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞
        price = None
        if "–¶–µ–Ω–∞:" in text:
            text, price = text.split("–¶–µ–Ω–∞:", 1)
            price = price.strip()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        if contains_forbidden_words(text):
            await update.message.reply_text("‚ùå –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞.")
            await context.bot.send_message(
                chat_id=REJECTED_CHAT_ID,
                text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{text}\n–ü—Ä–∏—á–∏–Ω–∞: —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞."
            )
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        if not contains_allowed_keywords(text):
            await update.message.reply_text("‚ùå –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ–∫—É–ø–∫–∞, –ø—Ä–æ–¥–∞–∂–∞, –æ–±–º–µ–Ω –∏ —Ç.–ø.).")
            await context.bot.send_message(
                chat_id=REJECTED_CHAT_ID,
                text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{text}\n–ü—Ä–∏—á–∏–Ω–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞."
            )
            return

        # –ï—Å–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—É–±–ª–∏–∫—É–µ–º –µ–≥–æ
        await update.message.reply_text("‚úÖ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ.")
        await context.bot.send_message(
            chat_id=TARGET_CHANNEL_ID,
            text=build_caption(text, username, price),
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url=f"https://t.me/{username}")],
                                              [InlineKeyboardButton("üì£ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", url="https://t.me/onyxsh0pbot")]])
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ
async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    caption = update.message.caption or ""
    file_id = update.message.photo[-1].file_id
    username = update.message.from_user.username or "–∞–Ω–æ–Ω–∏–º"
    
    # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–æ–±–∞–≤–∏–º —Ü–µ–Ω—É
    price = None
    if "–¶–µ–Ω–∞:" in caption:
        caption, price = caption.split("–¶–µ–Ω–∞:", 1)
        price = price.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
    if contains_forbidden_words(caption):
        await update.message.reply_text("‚ùå –í–∞—à–µ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞.")
        await context.bot.send_message(
            chat_id=REJECTED_CHAT_ID,
            text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{caption}\n–ü—Ä–∏—á–∏–Ω–∞: —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã–µ —Å–ª–æ–≤–∞."
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
    if not contains_allowed_keywords(caption):
        await update.message.reply_text("‚ùå –í–∞—à–µ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (–ø–æ–∫—É–ø–∫–∞, –ø—Ä–æ–¥–∞–∂–∞, –æ–±–º–µ–Ω –∏ —Ç.–ø.).")
        await context.bot.send_message(
            chat_id=REJECTED_CHAT_ID,
            text=f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{caption}\n–ü—Ä–∏—á–∏–Ω–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞."
        )
        return

    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏, –ø—É–±–ª–∏–∫—É–µ–º –µ–≥–æ
    await update.message.reply_text("‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ–æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ.")
    await context.bot.send_photo(
        chat_id=TARGET_CHANNEL_ID,
        photo=file_id,
        caption=build_caption(caption, username, price),
        reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–¥–∞–≤—Ü—É", url=f"https://t.me/{username}")],
                                          [InlineKeyboardButton("üì£ –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ", url="https://t.me/onyxsh0pbot")]])
    )

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    application = ApplicationBuilder().token(TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT, handle_text))
    application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
    
    await application.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())


